<% layout('layouts/boilerplate') %>
    <div class="main-content">
        <div class="post-container">
            <div class="top-container">
                <div class="author-container">
                    <img src="/imgs/pfp.png" class="profile-picture" alt="">
                    <a href="/<%=post.author._id%>/profile">
                        <p class="username-text">
                            <%= post.author.username %>
                        </p>
                    </a>
                </div>
                <button class="more-button">
                    <img src="/imgs/more.png" alt="comment icon">
                </button>
            </div>

            <img class="post-img" src="<%= post.image %>" alt="">
            <div class="icon-container">
                <form action="/<%=post._id%>/like" method="POST">
                    <button type="submit" class="like-button">
                        <img src="/imgs/like-unchecked.png" alt="like icon" class="icon-img" id="like-img">
                    </button>
                </form>
                <img class="icon-img" src="/imgs/comment.png" alt="comment icon">
                <img class="icon-img" src="/imgs/forward.png" alt="forward icon">
            </div>
            <p class="post-info-text" id="like-count">
                <%= post.likes.length %> Likes
            </p>
            <p class="post-info-text">
                <%= post.description %>
            </p>
        </div>
        <div id="more-container">
            <% if(currentUser && post.author.equals(currentUser._id)){ %>
                <form class="d-inline" action="/<%=post._id%>?_method=DELETE" method="POST">
                    <button class="more-buttons" id="delete-button">Delete</button>
                </form>
                <button class="more-buttons" id="edit-button">Edit</button>
                <button class="more-buttons" id="copy-button">Copy Link</button>
                <%}%>
        </div>

        <div class="likes-container">
            <% for (let liker of post.likes) { %>
                <% if (liker && currentUser && !currentUser._id.equals(liker._id)) { %>
                    <div class="user-container">
                        <div class="liker-info-container">
                            <img src="/imgs/pfp.png" alt="">
                            <a href="/<%=liker._id%>/profile">
                                <%=liker.username%>
                            </a>
                            <form action="/<%= liker._id %>/profile/follow" method="POST">
                                <button type="submit" class="follow-button-follower" data-user-id="<%= liker._id %>"
                                    data-following="<%= currentUser && liker.followers.includes(currentUser._id) %>">
                                    <%= currentUser && liker.followers.includes(currentUser._id) ? 'Unfollow' : 'Follow'
                                        %>
                                </button>
                            </form>
                        </div>
                    </div>
                    <% } %>
                        <% } %>
        </div>

    </div>

    <style>
        .top-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 100%;
        }

        .author-container {
            display: flex;
            align-items: center;
            margin: 10px;
            margin-left: 0px;
        }

        .profile-picture {
            border-radius: 50%;
            margin-right: 15px;
            width: 32px;
            height: 32px;
        }

        .post-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 25vw;
            margin: 0 auto;
        }

        .post-img {
            width: 100%;
            height: 40%;
            border: 2px solid #1F1E1E;
            border-radius: 10px;
        }

        .icon-container {
            display: flex;
            justify-content: flex-start;
            width: 100%;
            padding: 10px 0px 10px 0px;
        }

        .icon-img {
            width: 26px;
            height: 26px;
            margin-right: 12px;
        }

        .main-content {
            position: fixed;
            right: 0;
            width: 85%;
            height: 100%;
            background-color: black;
            overflow: auto;
            padding: 40px;
            color: white;
            /* Added text color for the form */
        }

        .more-button {
            border: 0px;
            background: transparent;
        }

        .more-button:hover {
            cursor: pointer;
        }

        .more-button img:active {
            filter: brightness(0.35);
        }

        #more-container {
            position: fixed;
            width: 450px;
            height: 500px;
            top: 50%;
            left: 50%;
            margin-top: -250px;
            /* Negative half of height. */
            margin-left: -225px;
            /* Negative half of width. */
            background-color: #1F1E1E;
            display: none;
            /* Initially hide the more container */
            border-radius: 25px;
        }

        .likes-container {
            position: fixed;
            width: 450px;
            height: 500px;
            top: 50%;
            left: 50%;
            margin-top: -250px;
            /* Negative half of height */
            margin-left: -225px;
            /* Negative half of width */
            background-color: #1F1E1E;
            display: none;
            border-radius: 25px;
            overflow-y: scroll;
            color: white;
            /* Adjusted text color for better visibility */
        }

        .user-container {
            display: flex;
            flex-direction: column;
            border-radius: 25px;
            margin-bottom: 8px;
            height: 10%;
        }

        .liker-info-container {
            display: flex;
            flex-direction: row;
            padding-left: 10px;
            padding-right: 10px;
            width: 95%;
            height: 100%;
            align-items: center;
            border-radius: 25px;
        }

        .liker-info-container img {
            width: 44px;
            height: 44px;
            border-radius: 50%;
            border: 2px solid gray;
        }

        .liker-info-container a {
            color: white;
            text-decoration: none;
            margin-left: 15px;
        }

        .follow-button-follower {
            margin-left: 200px;
            padding: 8px 16px;
            background-color: #279EFF;
            color: white;
            font-weight: bold;
            border: none;
            border-radius: 6px;
            box-sizing: border-box;
        }

        .liker-info-container .following {
            background-color: #4a4a4a;
        }

        .likes-container::-webkit-scrollbar {
            width: 17px;
            /* Width of the scrollbar */
        }

        .likes-container::-webkit-scrollbar-thumb {
            background-color: #4a4a4a;
            /* Color of the scrollbar thumb */
            border-radius: 6px;
            /* Rounded corners */
        }

        .likes-container::-webkit-scrollbar-track {
            background-color: #1F1E1E;
            /* Color of the scrollbar track */
        }

        .more-buttons {
            width: 100%;
            height: 10%;
            background: transparent;
            border: 0px;
            color: white;
            padding: 20px;
            border-bottom: 1px solid gray;
        }


        #delete-button {
            color: red;
        }

        .like-button {
            width: 32px;
            height: 32px;
            margin-right: 6px;
            background: transparent;
            border: 0px;
        }

        .post-info-text {
            font-family: sans-serif;
            color: white;
            align-self: flex-start;
            margin-bottom: 15px;
        }

        .username-text {
            font-family: sans-serif;
            color: white;
        }

        .post-info-text:nth-of-type(2) {
            font-size: 14px;
            padding-bottom: 15px;
            width: 100%;
            border-bottom: 2px solid #1F1E1E;
        }
    </style>

    <script>

        function toggleLikesContainer() {
            const likesContainer = document.querySelector('.likes-container');
            likesContainer.style.display = (likesContainer.style.display === 'none' || likesContainer.style.display === '') ? 'block' : 'none';
        }

        function isClickOutside(event) {
            const likesText = document.getElementById('like-count');
            const likesContainer = document.querySelector('.likes-container');
            return likesContainer.style.display === 'block' &&
                !likesContainer.contains(event.target) &&
                !likesText.contains(event.target);
        }

        function setupMoreButton() {
            const moreButton = document.querySelector(".more-button img");
            const moreContainer = document.getElementById("more-container");
            const mainContent = document.querySelector(".main-content");

            function toggleMoreContainer() {
                moreContainer.style.display = (moreContainer.style.display === "none") ? 'block' : 'none';
                mainContent.style.overflow = (moreContainer.style.display === 'none') ? 'auto' : 'hidden';
            }

            if (moreButton) {
                moreButton.addEventListener("click", toggleMoreContainer);
            }

            document.addEventListener("click", function (event) {
                if (!moreContainer.contains(event.target) && event.target !== moreButton) {
                    moreContainer.style.display = "none";
                    mainContent.style.overflow = "auto";
                }
            });
        }

        function setupEditButton() {
            const editButton = document.getElementById("edit-button");
            if (editButton) {
                editButton.addEventListener("click", function () {
                    window.location.href = `/<%=post._id%>/edit`;
                });
            }
        }

        function setupCopyButton() {
            const copyButton = document.getElementById("copy-button");
            if (copyButton) {
                copyButton.addEventListener("click", function () {
                    const postLink = `${window.location.origin}/post/<%=post._id%>`;
                    const tempInput = document.createElement('input');
                    tempInput.value = postLink;
                    document.body.appendChild(tempInput);
                    tempInput.select();
                    document.execCommand('copy');
                    document.body.removeChild(tempInput);
                });
            }
        }

        function setupLikeButton() {
            const likeButton = document.querySelector('.like-button');
            const postID = "<%=post._id%>";
            const likeText = document.getElementById("like-count");
            const likeImg = document.querySelector("#like-img");
            const currentUser = <%- JSON.stringify(currentUser) %>;
            let userID;

            if (currentUser) {
                userID = currentUser._id;
            }

            if (userID) {
                const isLikedByUser = localStorage.getItem(`like-${userID}-${postID}`) === 'true';
                if (isLikedByUser) {
                    likeImg.src = '/imgs/like-checked.png';
                }

                likeButton.addEventListener('click', async () => {
                    const alreadyLiked = likeImg.src.includes('like-checked.png');
                    localStorage.setItem(`like-${userID}-${postID}`, !alreadyLiked);

                    if (alreadyLiked) {
                        likeImg.src = '/imgs/like-unchecked.png';
                        currentLikes = parseInt(likeText.innerText);
                        likeText.innerText = `${currentLikes - 1} Likes`;
                    } else {
                        likeImg.src = '/imgs/like-checked.png';
                        currentLikes = parseInt(likeText.innerText);
                        likeText.innerText = `${currentLikes + 1} Likes`;
                    }
                });
            } else {
                likeImg.src = '/imgs/like-unchecked.png';
            }
        }

        function setupFollowButton() {
            const followButtons = document.querySelectorAll('.follow-button-follower');

            if (followButtons) {
                followButtons.forEach((followButton) => {
                    const userId = followButton.dataset.userId;
                    const isFollowing = localStorage.getItem(`follow-${userId}`) === 'true';

                    // Set initial button state
                    setFollowButtonState(followButton, isFollowing);

                    followButton.addEventListener('click', function () {
                        const newFollowingState = !isFollowing;
                        setFollowButtonState(followButton, newFollowingState);
                        localStorage.setItem(`follow-${userId}`, newFollowingState);
                    });
                });
            }
        }

        function setFollowButtonState(button, isFollowing) {
            if (isFollowing) {
                button.classList.add('following');
                button.innerText = 'Unfollow';
                button.dataset.following = 'true';
            } else {
                button.classList.remove('following');
                button.innerText = 'Follow';
                button.dataset.following = 'false';
            }
        }

        function setupPageShowEvent() {
            window.addEventListener("pageshow", function (event) {
                const historyTraversal = event.persisted ||
                    (typeof window.performance != "undefined" && window.performance.navigation.type === 2);
                if (historyTraversal) {
                    window.location.reload();
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            setupMoreButton();
            setupEditButton();
            setupCopyButton();
            setupLikeButton();
            setupPageShowEvent();
            const likeCount = document.getElementById('like-count');
            if (likeCount) {
                likeCount.addEventListener('click', toggleLikesContainer);
            }
            setupFollowButton();

            const likesContainer = document.querySelector('.likes-container');
            document.addEventListener('click', (event) => {
                if (isClickOutside(event)) {
                    likesContainer.style.display = 'none';
                }
            });
        });
    </script>